{"ast":null,"code":"var FrameStringSource = require(\"./FrameStringSource\"),\n    FrameStringParser = require(\"./FrameStringParser\"),\n    cache = require(\"u3\").cache,\n    prepareStackTrace = require(\"../prepareStackTrace\");\n\nmodule.exports = function () {\n  Error.captureStackTrace = function captureStackTrace(throwable, terminator) {\n    var warnings;\n    var frameShifts = [captureStackTrace];\n\n    if (terminator) {\n      // additional frames can come here if arguments.callee.caller is supported\n      // otherwise it is hard to identify the terminator\n      frameShifts.push(terminator);\n    }\n\n    var captured = FrameStringSource.getInstance().captureFrameStrings(frameShifts);\n    Object.defineProperties(throwable, {\n      stack: {\n        configurable: true,\n        get: cache(function () {\n          var frames = FrameStringParser.getInstance().getFrames(captured.frameStrings, captured.functionValues);\n          return (Error.prepareStackTrace || prepareStackTrace)(throwable, frames, warnings);\n        })\n      },\n      cachedStack: {\n        configurable: true,\n        writable: true,\n        enumerable: false,\n        value: true\n      }\n    });\n  };\n\n  Error.getStackTrace = function (throwable) {\n    if (throwable.cachedStack) return throwable.stack;\n    var frameStrings = FrameStringSource.getInstance().getFrameStrings(throwable),\n        frames = [],\n        warnings;\n    if (frameStrings) frames = FrameStringParser.getInstance().getFrames(frameStrings, []);else warnings = [\"The stack is not readable by unthrown errors in this environment.\"];\n    var stack = (Error.prepareStackTrace || prepareStackTrace)(throwable, frames, warnings);\n    if (frameStrings) try {\n      Object.defineProperties(throwable, {\n        stack: {\n          configurable: true,\n          writable: true,\n          enumerable: false,\n          value: stack\n        },\n        cachedStack: {\n          configurable: true,\n          writable: true,\n          enumerable: false,\n          value: true\n        }\n      });\n    } catch (nonConfigurableError) {}\n    return stack;\n  };\n\n  return {\n    prepareStackTrace: prepareStackTrace\n  };\n};","map":{"version":3,"sources":["/home/jjsullivan/near-roster-ux-project/roster-ux-app/todos-crud-web/node_modules/error-polyfill/lib/non-v8/index.js"],"names":["FrameStringSource","require","FrameStringParser","cache","prepareStackTrace","module","exports","Error","captureStackTrace","throwable","terminator","warnings","frameShifts","push","captured","getInstance","captureFrameStrings","Object","defineProperties","stack","configurable","get","frames","getFrames","frameStrings","functionValues","cachedStack","writable","enumerable","value","getStackTrace","getFrameStrings","nonConfigurableError"],"mappings":"AAAA,IAAIA,iBAAiB,GAAGC,OAAO,CAAC,qBAAD,CAA/B;AAAA,IACIC,iBAAiB,GAAGD,OAAO,CAAC,qBAAD,CAD/B;AAAA,IAEIE,KAAK,GAAGF,OAAO,CAAC,IAAD,CAAP,CAAcE,KAF1B;AAAA,IAGIC,iBAAiB,GAAGH,OAAO,CAAC,sBAAD,CAH/B;;AAKAI,MAAM,CAACC,OAAP,GAAiB,YAAY;AAEzBC,EAAAA,KAAK,CAACC,iBAAN,GAA0B,SAASA,iBAAT,CAA2BC,SAA3B,EAAsCC,UAAtC,EAAkD;AACxE,QAAIC,QAAJ;AACA,QAAIC,WAAW,GAAG,CACdJ,iBADc,CAAlB;;AAGA,QAAIE,UAAJ,EAAgB;AACZ;AACA;AACAE,MAAAA,WAAW,CAACC,IAAZ,CAAiBH,UAAjB;AACH;;AACD,QAAII,QAAQ,GAAGd,iBAAiB,CAACe,WAAlB,GAAgCC,mBAAhC,CAAoDJ,WAApD,CAAf;AACAK,IAAAA,MAAM,CAACC,gBAAP,CAAwBT,SAAxB,EAAmC;AAC/BU,MAAAA,KAAK,EAAE;AACHC,QAAAA,YAAY,EAAE,IADX;AAEHC,QAAAA,GAAG,EAAElB,KAAK,CAAC,YAAY;AACnB,cAAImB,MAAM,GAAGpB,iBAAiB,CAACa,WAAlB,GAAgCQ,SAAhC,CAA0CT,QAAQ,CAACU,YAAnD,EAAiEV,QAAQ,CAACW,cAA1E,CAAb;AACA,iBAAO,CAAClB,KAAK,CAACH,iBAAN,IAA2BA,iBAA5B,EAA+CK,SAA/C,EAA0Da,MAA1D,EAAkEX,QAAlE,CAAP;AACH,SAHS;AAFP,OADwB;AAQ/Be,MAAAA,WAAW,EAAE;AACTN,QAAAA,YAAY,EAAE,IADL;AAETO,QAAAA,QAAQ,EAAE,IAFD;AAGTC,QAAAA,UAAU,EAAE,KAHH;AAITC,QAAAA,KAAK,EAAE;AAJE;AARkB,KAAnC;AAeH,GA1BD;;AA4BAtB,EAAAA,KAAK,CAACuB,aAAN,GAAsB,UAAUrB,SAAV,EAAqB;AACvC,QAAIA,SAAS,CAACiB,WAAd,EACI,OAAOjB,SAAS,CAACU,KAAjB;AACJ,QAAIK,YAAY,GAAGxB,iBAAiB,CAACe,WAAlB,GAAgCgB,eAAhC,CAAgDtB,SAAhD,CAAnB;AAAA,QACIa,MAAM,GAAG,EADb;AAAA,QAEIX,QAFJ;AAGA,QAAIa,YAAJ,EACIF,MAAM,GAAGpB,iBAAiB,CAACa,WAAlB,GAAgCQ,SAAhC,CAA0CC,YAA1C,EAAwD,EAAxD,CAAT,CADJ,KAGIb,QAAQ,GAAG,CACP,mEADO,CAAX;AAGJ,QAAIQ,KAAK,GAAG,CAACZ,KAAK,CAACH,iBAAN,IAA2BA,iBAA5B,EAA+CK,SAA/C,EAA0Da,MAA1D,EAAkEX,QAAlE,CAAZ;AACA,QAAIa,YAAJ,EACI,IAAI;AACAP,MAAAA,MAAM,CAACC,gBAAP,CAAwBT,SAAxB,EAAmC;AAC/BU,QAAAA,KAAK,EAAE;AACHC,UAAAA,YAAY,EAAE,IADX;AAEHO,UAAAA,QAAQ,EAAE,IAFP;AAGHC,UAAAA,UAAU,EAAE,KAHT;AAIHC,UAAAA,KAAK,EAAEV;AAJJ,SADwB;AAO/BO,QAAAA,WAAW,EAAE;AACTN,UAAAA,YAAY,EAAE,IADL;AAETO,UAAAA,QAAQ,EAAE,IAFD;AAGTC,UAAAA,UAAU,EAAE,KAHH;AAITC,UAAAA,KAAK,EAAE;AAJE;AAPkB,OAAnC;AAcH,KAfD,CAeE,OAAOG,oBAAP,EAA6B,CAC9B;AACL,WAAOb,KAAP;AACH,GAhCD;;AAkCA,SAAO;AACHf,IAAAA,iBAAiB,EAAEA;AADhB,GAAP;AAGH,CAnED","sourcesContent":["var FrameStringSource = require(\"./FrameStringSource\"),\r\n    FrameStringParser = require(\"./FrameStringParser\"),\r\n    cache = require(\"u3\").cache,\r\n    prepareStackTrace = require(\"../prepareStackTrace\");\r\n\r\nmodule.exports = function () {\r\n\r\n    Error.captureStackTrace = function captureStackTrace(throwable, terminator) {\r\n        var warnings;\r\n        var frameShifts = [\r\n            captureStackTrace\r\n        ];\r\n        if (terminator) {\r\n            // additional frames can come here if arguments.callee.caller is supported\r\n            // otherwise it is hard to identify the terminator\r\n            frameShifts.push(terminator);\r\n        }\r\n        var captured = FrameStringSource.getInstance().captureFrameStrings(frameShifts);\r\n        Object.defineProperties(throwable, {\r\n            stack: {\r\n                configurable: true,\r\n                get: cache(function () {\r\n                    var frames = FrameStringParser.getInstance().getFrames(captured.frameStrings, captured.functionValues);\r\n                    return (Error.prepareStackTrace || prepareStackTrace)(throwable, frames, warnings);\r\n                })\r\n            },\r\n            cachedStack: {\r\n                configurable: true,\r\n                writable: true,\r\n                enumerable: false,\r\n                value: true\r\n            }\r\n        });\r\n    };\r\n\r\n    Error.getStackTrace = function (throwable) {\r\n        if (throwable.cachedStack)\r\n            return throwable.stack;\r\n        var frameStrings = FrameStringSource.getInstance().getFrameStrings(throwable),\r\n            frames = [],\r\n            warnings;\r\n        if (frameStrings)\r\n            frames = FrameStringParser.getInstance().getFrames(frameStrings, []);\r\n        else\r\n            warnings = [\r\n                \"The stack is not readable by unthrown errors in this environment.\"\r\n            ];\r\n        var stack = (Error.prepareStackTrace || prepareStackTrace)(throwable, frames, warnings);\r\n        if (frameStrings)\r\n            try {\r\n                Object.defineProperties(throwable, {\r\n                    stack: {\r\n                        configurable: true,\r\n                        writable: true,\r\n                        enumerable: false,\r\n                        value: stack\r\n                    },\r\n                    cachedStack: {\r\n                        configurable: true,\r\n                        writable: true,\r\n                        enumerable: false,\r\n                        value: true\r\n                    }\r\n                });\r\n            } catch (nonConfigurableError) {\r\n            }\r\n        return stack;\r\n    };\r\n\r\n    return {\r\n        prepareStackTrace: prepareStackTrace\r\n    };\r\n};"]},"metadata":{},"sourceType":"script"}