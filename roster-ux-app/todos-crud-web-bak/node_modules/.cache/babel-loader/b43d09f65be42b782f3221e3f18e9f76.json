{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.signTransaction = exports.createTransaction = exports.SCHEMA = exports.Action = exports.SignedTransaction = exports.Transaction = exports.Signature = exports.deleteAccount = exports.deleteKey = exports.addKey = exports.stake = exports.transfer = exports.functionCall = exports.deployContract = exports.createAccount = exports.DeleteAccount = exports.DeleteKey = exports.AddKey = exports.Stake = exports.Transfer = exports.FunctionCall = exports.DeployContract = exports.CreateAccount = exports.IAction = exports.functionCallAccessKey = exports.fullAccessKey = exports.AccessKey = exports.AccessKeyPermission = exports.FullAccessPermission = exports.FunctionCallPermission = void 0;\n\nconst js_sha256_1 = __importDefault(require(\"js-sha256\"));\n\nconst enums_1 = require(\"./utils/enums\");\n\nconst borsh_1 = require(\"borsh\");\n\nconst key_pair_1 = require(\"./utils/key_pair\");\n\nclass FunctionCallPermission extends enums_1.Assignable {}\n\nexports.FunctionCallPermission = FunctionCallPermission;\n\nclass FullAccessPermission extends enums_1.Assignable {}\n\nexports.FullAccessPermission = FullAccessPermission;\n\nclass AccessKeyPermission extends enums_1.Enum {}\n\nexports.AccessKeyPermission = AccessKeyPermission;\n\nclass AccessKey extends enums_1.Assignable {}\n\nexports.AccessKey = AccessKey;\n\nfunction fullAccessKey() {\n  return new AccessKey({\n    nonce: 0,\n    permission: new AccessKeyPermission({\n      fullAccess: new FullAccessPermission({})\n    })\n  });\n}\n\nexports.fullAccessKey = fullAccessKey;\n\nfunction functionCallAccessKey(receiverId, methodNames, allowance) {\n  return new AccessKey({\n    nonce: 0,\n    permission: new AccessKeyPermission({\n      functionCall: new FunctionCallPermission({\n        receiverId,\n        allowance,\n        methodNames\n      })\n    })\n  });\n}\n\nexports.functionCallAccessKey = functionCallAccessKey;\n\nclass IAction extends enums_1.Assignable {}\n\nexports.IAction = IAction;\n\nclass CreateAccount extends IAction {}\n\nexports.CreateAccount = CreateAccount;\n\nclass DeployContract extends IAction {}\n\nexports.DeployContract = DeployContract;\n\nclass FunctionCall extends IAction {}\n\nexports.FunctionCall = FunctionCall;\n\nclass Transfer extends IAction {}\n\nexports.Transfer = Transfer;\n\nclass Stake extends IAction {}\n\nexports.Stake = Stake;\n\nclass AddKey extends IAction {}\n\nexports.AddKey = AddKey;\n\nclass DeleteKey extends IAction {}\n\nexports.DeleteKey = DeleteKey;\n\nclass DeleteAccount extends IAction {}\n\nexports.DeleteAccount = DeleteAccount;\n\nfunction createAccount() {\n  return new Action({\n    createAccount: new CreateAccount({})\n  });\n}\n\nexports.createAccount = createAccount;\n\nfunction deployContract(code) {\n  return new Action({\n    deployContract: new DeployContract({\n      code\n    })\n  });\n}\n\nexports.deployContract = deployContract;\n/**\n * Constructs {@link Action} instance representing contract method call.\n *\n * @param methodName the name of the method to call\n * @param args arguments to pass to method. Can be either plain JS object which gets serialized as JSON automatically\n *  or `Uint8Array` instance which represents bytes passed as is.\n * @param gas max amount of gas that method call can use\n * @param deposit amount of NEAR (in yoctoNEAR) to send together with the call\n */\n\nfunction functionCall(methodName, args, gas, deposit) {\n  const anyArgs = args;\n  const isUint8Array = anyArgs.byteLength !== undefined && anyArgs.byteLength === anyArgs.length;\n  const serializedArgs = isUint8Array ? args : Buffer.from(JSON.stringify(args));\n  return new Action({\n    functionCall: new FunctionCall({\n      methodName,\n      args: serializedArgs,\n      gas,\n      deposit\n    })\n  });\n}\n\nexports.functionCall = functionCall;\n\nfunction transfer(deposit) {\n  return new Action({\n    transfer: new Transfer({\n      deposit\n    })\n  });\n}\n\nexports.transfer = transfer;\n\nfunction stake(stake, publicKey) {\n  return new Action({\n    stake: new Stake({\n      stake,\n      publicKey\n    })\n  });\n}\n\nexports.stake = stake;\n\nfunction addKey(publicKey, accessKey) {\n  return new Action({\n    addKey: new AddKey({\n      publicKey,\n      accessKey\n    })\n  });\n}\n\nexports.addKey = addKey;\n\nfunction deleteKey(publicKey) {\n  return new Action({\n    deleteKey: new DeleteKey({\n      publicKey\n    })\n  });\n}\n\nexports.deleteKey = deleteKey;\n\nfunction deleteAccount(beneficiaryId) {\n  return new Action({\n    deleteAccount: new DeleteAccount({\n      beneficiaryId\n    })\n  });\n}\n\nexports.deleteAccount = deleteAccount;\n\nclass Signature extends enums_1.Assignable {}\n\nexports.Signature = Signature;\n\nclass Transaction extends enums_1.Assignable {\n  encode() {\n    return borsh_1.serialize(exports.SCHEMA, this);\n  }\n\n  static decode(bytes) {\n    return borsh_1.deserialize(exports.SCHEMA, Transaction, bytes);\n  }\n\n}\n\nexports.Transaction = Transaction;\n\nclass SignedTransaction extends enums_1.Assignable {\n  encode() {\n    return borsh_1.serialize(exports.SCHEMA, this);\n  }\n\n  static decode(bytes) {\n    return borsh_1.deserialize(exports.SCHEMA, SignedTransaction, bytes);\n  }\n\n}\n\nexports.SignedTransaction = SignedTransaction;\n/**\n * Contains a list of the valid transaction Actions available with this API\n * @see {@link https://nomicon.io/RuntimeSpec/Actions.html | Actions Spec}\n */\n\nclass Action extends enums_1.Enum {}\n\nexports.Action = Action;\nexports.SCHEMA = new Map([[Signature, {\n  kind: 'struct',\n  fields: [['keyType', 'u8'], ['data', [64]]]\n}], [SignedTransaction, {\n  kind: 'struct',\n  fields: [['transaction', Transaction], ['signature', Signature]]\n}], [Transaction, {\n  kind: 'struct',\n  fields: [['signerId', 'string'], ['publicKey', key_pair_1.PublicKey], ['nonce', 'u64'], ['receiverId', 'string'], ['blockHash', [32]], ['actions', [Action]]]\n}], [key_pair_1.PublicKey, {\n  kind: 'struct',\n  fields: [['keyType', 'u8'], ['data', [32]]]\n}], [AccessKey, {\n  kind: 'struct',\n  fields: [['nonce', 'u64'], ['permission', AccessKeyPermission]]\n}], [AccessKeyPermission, {\n  kind: 'enum',\n  field: 'enum',\n  values: [['functionCall', FunctionCallPermission], ['fullAccess', FullAccessPermission]]\n}], [FunctionCallPermission, {\n  kind: 'struct',\n  fields: [['allowance', {\n    kind: 'option',\n    type: 'u128'\n  }], ['receiverId', 'string'], ['methodNames', ['string']]]\n}], [FullAccessPermission, {\n  kind: 'struct',\n  fields: []\n}], [Action, {\n  kind: 'enum',\n  field: 'enum',\n  values: [['createAccount', CreateAccount], ['deployContract', DeployContract], ['functionCall', FunctionCall], ['transfer', Transfer], ['stake', Stake], ['addKey', AddKey], ['deleteKey', DeleteKey], ['deleteAccount', DeleteAccount]]\n}], [CreateAccount, {\n  kind: 'struct',\n  fields: []\n}], [DeployContract, {\n  kind: 'struct',\n  fields: [['code', ['u8']]]\n}], [FunctionCall, {\n  kind: 'struct',\n  fields: [['methodName', 'string'], ['args', ['u8']], ['gas', 'u64'], ['deposit', 'u128']]\n}], [Transfer, {\n  kind: 'struct',\n  fields: [['deposit', 'u128']]\n}], [Stake, {\n  kind: 'struct',\n  fields: [['stake', 'u128'], ['publicKey', key_pair_1.PublicKey]]\n}], [AddKey, {\n  kind: 'struct',\n  fields: [['publicKey', key_pair_1.PublicKey], ['accessKey', AccessKey]]\n}], [DeleteKey, {\n  kind: 'struct',\n  fields: [['publicKey', key_pair_1.PublicKey]]\n}], [DeleteAccount, {\n  kind: 'struct',\n  fields: [['beneficiaryId', 'string']]\n}]]);\n\nfunction createTransaction(signerId, publicKey, receiverId, nonce, actions, blockHash) {\n  return new Transaction({\n    signerId,\n    publicKey,\n    nonce,\n    receiverId,\n    actions,\n    blockHash\n  });\n}\n\nexports.createTransaction = createTransaction;\n/**\n * Signs a given transaction from an account with given keys, applied to the given network\n * @param transaction The Transaction object to sign\n * @param signer The {Signer} object that assists with signing keys\n * @param accountId The human-readable NEAR account name\n * @param networkId The targeted network. (ex. default, betanet, etcâ€¦)\n */\n\nasync function signTransactionObject(transaction, signer, accountId, networkId) {\n  const message = borsh_1.serialize(exports.SCHEMA, transaction);\n  const hash = new Uint8Array(js_sha256_1.default.sha256.array(message));\n  const signature = await signer.signMessage(message, accountId, networkId);\n  const signedTx = new SignedTransaction({\n    transaction,\n    signature: new Signature({\n      keyType: transaction.publicKey.keyType,\n      data: signature.signature\n    })\n  });\n  return [hash, signedTx];\n}\n\nasync function signTransaction(...args) {\n  if (args[0].constructor === Transaction) {\n    const [transaction, signer, accountId, networkId] = args;\n    return signTransactionObject(transaction, signer, accountId, networkId);\n  } else {\n    const [receiverId, nonce, actions, blockHash, signer, accountId, networkId] = args;\n    const publicKey = await signer.getPublicKey(accountId, networkId);\n    const transaction = createTransaction(accountId, publicKey, receiverId, nonce, actions, blockHash);\n    return signTransactionObject(transaction, signer, accountId, networkId);\n  }\n}\n\nexports.signTransaction = signTransaction;","map":{"version":3,"sources":["/home/jjsullivan/near-roster-ux-project/roster-ux-app/todos-crud-web-bak/node_modules/near-api-js/lib/transaction.js"],"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","signTransaction","createTransaction","SCHEMA","Action","SignedTransaction","Transaction","Signature","deleteAccount","deleteKey","addKey","stake","transfer","functionCall","deployContract","createAccount","DeleteAccount","DeleteKey","AddKey","Stake","Transfer","FunctionCall","DeployContract","CreateAccount","IAction","functionCallAccessKey","fullAccessKey","AccessKey","AccessKeyPermission","FullAccessPermission","FunctionCallPermission","js_sha256_1","require","enums_1","borsh_1","key_pair_1","Assignable","Enum","nonce","permission","fullAccess","receiverId","methodNames","allowance","code","methodName","args","gas","deposit","anyArgs","isUint8Array","byteLength","undefined","length","serializedArgs","Buffer","from","JSON","stringify","publicKey","accessKey","beneficiaryId","encode","serialize","decode","bytes","deserialize","Map","kind","fields","PublicKey","field","values","type","signerId","actions","blockHash","signTransactionObject","transaction","signer","accountId","networkId","message","hash","Uint8Array","default","sha256","array","signature","signMessage","signedTx","keyType","data","constructor","getPublicKey"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.signTransaction = exports.createTransaction = exports.SCHEMA = exports.Action = exports.SignedTransaction = exports.Transaction = exports.Signature = exports.deleteAccount = exports.deleteKey = exports.addKey = exports.stake = exports.transfer = exports.functionCall = exports.deployContract = exports.createAccount = exports.DeleteAccount = exports.DeleteKey = exports.AddKey = exports.Stake = exports.Transfer = exports.FunctionCall = exports.DeployContract = exports.CreateAccount = exports.IAction = exports.functionCallAccessKey = exports.fullAccessKey = exports.AccessKey = exports.AccessKeyPermission = exports.FullAccessPermission = exports.FunctionCallPermission = void 0;\nconst js_sha256_1 = __importDefault(require(\"js-sha256\"));\nconst enums_1 = require(\"./utils/enums\");\nconst borsh_1 = require(\"borsh\");\nconst key_pair_1 = require(\"./utils/key_pair\");\nclass FunctionCallPermission extends enums_1.Assignable {\n}\nexports.FunctionCallPermission = FunctionCallPermission;\nclass FullAccessPermission extends enums_1.Assignable {\n}\nexports.FullAccessPermission = FullAccessPermission;\nclass AccessKeyPermission extends enums_1.Enum {\n}\nexports.AccessKeyPermission = AccessKeyPermission;\nclass AccessKey extends enums_1.Assignable {\n}\nexports.AccessKey = AccessKey;\nfunction fullAccessKey() {\n    return new AccessKey({ nonce: 0, permission: new AccessKeyPermission({ fullAccess: new FullAccessPermission({}) }) });\n}\nexports.fullAccessKey = fullAccessKey;\nfunction functionCallAccessKey(receiverId, methodNames, allowance) {\n    return new AccessKey({ nonce: 0, permission: new AccessKeyPermission({ functionCall: new FunctionCallPermission({ receiverId, allowance, methodNames }) }) });\n}\nexports.functionCallAccessKey = functionCallAccessKey;\nclass IAction extends enums_1.Assignable {\n}\nexports.IAction = IAction;\nclass CreateAccount extends IAction {\n}\nexports.CreateAccount = CreateAccount;\nclass DeployContract extends IAction {\n}\nexports.DeployContract = DeployContract;\nclass FunctionCall extends IAction {\n}\nexports.FunctionCall = FunctionCall;\nclass Transfer extends IAction {\n}\nexports.Transfer = Transfer;\nclass Stake extends IAction {\n}\nexports.Stake = Stake;\nclass AddKey extends IAction {\n}\nexports.AddKey = AddKey;\nclass DeleteKey extends IAction {\n}\nexports.DeleteKey = DeleteKey;\nclass DeleteAccount extends IAction {\n}\nexports.DeleteAccount = DeleteAccount;\nfunction createAccount() {\n    return new Action({ createAccount: new CreateAccount({}) });\n}\nexports.createAccount = createAccount;\nfunction deployContract(code) {\n    return new Action({ deployContract: new DeployContract({ code }) });\n}\nexports.deployContract = deployContract;\n/**\n * Constructs {@link Action} instance representing contract method call.\n *\n * @param methodName the name of the method to call\n * @param args arguments to pass to method. Can be either plain JS object which gets serialized as JSON automatically\n *  or `Uint8Array` instance which represents bytes passed as is.\n * @param gas max amount of gas that method call can use\n * @param deposit amount of NEAR (in yoctoNEAR) to send together with the call\n */\nfunction functionCall(methodName, args, gas, deposit) {\n    const anyArgs = args;\n    const isUint8Array = anyArgs.byteLength !== undefined && anyArgs.byteLength === anyArgs.length;\n    const serializedArgs = isUint8Array ? args : Buffer.from(JSON.stringify(args));\n    return new Action({ functionCall: new FunctionCall({ methodName, args: serializedArgs, gas, deposit }) });\n}\nexports.functionCall = functionCall;\nfunction transfer(deposit) {\n    return new Action({ transfer: new Transfer({ deposit }) });\n}\nexports.transfer = transfer;\nfunction stake(stake, publicKey) {\n    return new Action({ stake: new Stake({ stake, publicKey }) });\n}\nexports.stake = stake;\nfunction addKey(publicKey, accessKey) {\n    return new Action({ addKey: new AddKey({ publicKey, accessKey }) });\n}\nexports.addKey = addKey;\nfunction deleteKey(publicKey) {\n    return new Action({ deleteKey: new DeleteKey({ publicKey }) });\n}\nexports.deleteKey = deleteKey;\nfunction deleteAccount(beneficiaryId) {\n    return new Action({ deleteAccount: new DeleteAccount({ beneficiaryId }) });\n}\nexports.deleteAccount = deleteAccount;\nclass Signature extends enums_1.Assignable {\n}\nexports.Signature = Signature;\nclass Transaction extends enums_1.Assignable {\n    encode() {\n        return borsh_1.serialize(exports.SCHEMA, this);\n    }\n    static decode(bytes) {\n        return borsh_1.deserialize(exports.SCHEMA, Transaction, bytes);\n    }\n}\nexports.Transaction = Transaction;\nclass SignedTransaction extends enums_1.Assignable {\n    encode() {\n        return borsh_1.serialize(exports.SCHEMA, this);\n    }\n    static decode(bytes) {\n        return borsh_1.deserialize(exports.SCHEMA, SignedTransaction, bytes);\n    }\n}\nexports.SignedTransaction = SignedTransaction;\n/**\n * Contains a list of the valid transaction Actions available with this API\n * @see {@link https://nomicon.io/RuntimeSpec/Actions.html | Actions Spec}\n */\nclass Action extends enums_1.Enum {\n}\nexports.Action = Action;\nexports.SCHEMA = new Map([\n    [Signature, { kind: 'struct', fields: [\n                ['keyType', 'u8'],\n                ['data', [64]]\n            ] }],\n    [SignedTransaction, { kind: 'struct', fields: [\n                ['transaction', Transaction],\n                ['signature', Signature]\n            ] }],\n    [Transaction, { kind: 'struct', fields: [\n                ['signerId', 'string'],\n                ['publicKey', key_pair_1.PublicKey],\n                ['nonce', 'u64'],\n                ['receiverId', 'string'],\n                ['blockHash', [32]],\n                ['actions', [Action]]\n            ] }],\n    [key_pair_1.PublicKey, { kind: 'struct', fields: [\n                ['keyType', 'u8'],\n                ['data', [32]]\n            ] }],\n    [AccessKey, { kind: 'struct', fields: [\n                ['nonce', 'u64'],\n                ['permission', AccessKeyPermission],\n            ] }],\n    [AccessKeyPermission, { kind: 'enum', field: 'enum', values: [\n                ['functionCall', FunctionCallPermission],\n                ['fullAccess', FullAccessPermission],\n            ] }],\n    [FunctionCallPermission, { kind: 'struct', fields: [\n                ['allowance', { kind: 'option', type: 'u128' }],\n                ['receiverId', 'string'],\n                ['methodNames', ['string']],\n            ] }],\n    [FullAccessPermission, { kind: 'struct', fields: [] }],\n    [Action, { kind: 'enum', field: 'enum', values: [\n                ['createAccount', CreateAccount],\n                ['deployContract', DeployContract],\n                ['functionCall', FunctionCall],\n                ['transfer', Transfer],\n                ['stake', Stake],\n                ['addKey', AddKey],\n                ['deleteKey', DeleteKey],\n                ['deleteAccount', DeleteAccount],\n            ] }],\n    [CreateAccount, { kind: 'struct', fields: [] }],\n    [DeployContract, { kind: 'struct', fields: [\n                ['code', ['u8']]\n            ] }],\n    [FunctionCall, { kind: 'struct', fields: [\n                ['methodName', 'string'],\n                ['args', ['u8']],\n                ['gas', 'u64'],\n                ['deposit', 'u128']\n            ] }],\n    [Transfer, { kind: 'struct', fields: [\n                ['deposit', 'u128']\n            ] }],\n    [Stake, { kind: 'struct', fields: [\n                ['stake', 'u128'],\n                ['publicKey', key_pair_1.PublicKey]\n            ] }],\n    [AddKey, { kind: 'struct', fields: [\n                ['publicKey', key_pair_1.PublicKey],\n                ['accessKey', AccessKey]\n            ] }],\n    [DeleteKey, { kind: 'struct', fields: [\n                ['publicKey', key_pair_1.PublicKey]\n            ] }],\n    [DeleteAccount, { kind: 'struct', fields: [\n                ['beneficiaryId', 'string']\n            ] }],\n]);\nfunction createTransaction(signerId, publicKey, receiverId, nonce, actions, blockHash) {\n    return new Transaction({ signerId, publicKey, nonce, receiverId, actions, blockHash });\n}\nexports.createTransaction = createTransaction;\n/**\n * Signs a given transaction from an account with given keys, applied to the given network\n * @param transaction The Transaction object to sign\n * @param signer The {Signer} object that assists with signing keys\n * @param accountId The human-readable NEAR account name\n * @param networkId The targeted network. (ex. default, betanet, etcâ€¦)\n */\nasync function signTransactionObject(transaction, signer, accountId, networkId) {\n    const message = borsh_1.serialize(exports.SCHEMA, transaction);\n    const hash = new Uint8Array(js_sha256_1.default.sha256.array(message));\n    const signature = await signer.signMessage(message, accountId, networkId);\n    const signedTx = new SignedTransaction({\n        transaction,\n        signature: new Signature({ keyType: transaction.publicKey.keyType, data: signature.signature })\n    });\n    return [hash, signedTx];\n}\nasync function signTransaction(...args) {\n    if (args[0].constructor === Transaction) {\n        const [transaction, signer, accountId, networkId] = args;\n        return signTransactionObject(transaction, signer, accountId, networkId);\n    }\n    else {\n        const [receiverId, nonce, actions, blockHash, signer, accountId, networkId] = args;\n        const publicKey = await signer.getPublicKey(accountId, networkId);\n        const transaction = createTransaction(accountId, publicKey, receiverId, nonce, actions, blockHash);\n        return signTransactionObject(transaction, signer, accountId, networkId);\n    }\n}\nexports.signTransaction = signTransaction;\n"]},"metadata":{},"sourceType":"script"}