{"ast":null,"code":"var _jsxFileName = \"/home/jjsullivan/near-roster-ux-project/roster-ux-app/todos-crud-web/src/components/TodoList.js\",\n    _s = $RefreshSig$();\n\n// src/components/TodoList.js\nimport { useEffect, useState } from \"react\";\nimport { Todo } from \"./Todo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PER_PAGE_LIMIT = 3;\n\nconst TodoList = ({\n  contract\n}) => {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  const [page, setPage] = useState(1);\n  useEffect(() => {\n    let offset;\n\n    if (page < 1) {\n      setPage(1);\n      offset = 0;\n    } else {\n      offset = (page - 1) * PER_PAGE_LIMIT;\n    } // every second after the component first mounts\n    // update the list of todos by invoking the get\n    // method on the smart contract\n\n\n    const id = setInterval(() => {\n      contract.get({\n        offset,\n        limit: PER_PAGE_LIMIT\n      }).then(todos => setTodos(todos));\n    }, 1000);\n    return () => clearInterval(id);\n  }, [page, contract]);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex\",\n      children: [\"Sayfa: \", page]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setPage(page => page - 1),\n      children: \"<\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setPage(page => page + 1),\n      children: \">\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(Todo, {\n        contract: contract,\n        ...todo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TodoList, \"eNo2r+/eXlMWCKTrgJhfQ/DvYhs=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/home/jjsullivan/near-roster-ux-project/roster-ux-app/todos-crud-web/src/components/TodoList.js"],"names":["useEffect","useState","Todo","PER_PAGE_LIMIT","TodoList","contract","todos","setTodos","page","setPage","offset","id","setInterval","get","limit","then","clearInterval","map","todo"],"mappings":";;;AAAA;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,IAAT,QAAqB,QAArB;;AAEA,MAAMC,cAAc,GAAG,CAAvB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACjC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,CAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIU,MAAJ;;AACA,QAAIF,IAAI,GAAG,CAAX,EAAc;AACZC,MAAAA,OAAO,CAAC,CAAD,CAAP;AACAC,MAAAA,MAAM,GAAG,CAAT;AACD,KAHD,MAGO;AACLA,MAAAA,MAAM,GAAG,CAACF,IAAI,GAAG,CAAR,IAAaL,cAAtB;AACD,KAPa,CASd;AACA;AACA;;;AACA,UAAMQ,EAAE,GAAGC,WAAW,CAAC,MAAM;AAC3BP,MAAAA,QAAQ,CACLQ,GADH,CACO;AAAEH,QAAAA,MAAF;AAAUI,QAAAA,KAAK,EAAEX;AAAjB,OADP,EAEGY,IAFH,CAEST,KAAD,IAAWC,QAAQ,CAACD,KAAD,CAF3B;AAGD,KAJqB,EAInB,IAJmB,CAAtB;AAMA,WAAO,MAAMU,aAAa,CAACL,EAAD,CAA1B;AACD,GAnBQ,EAmBN,CAACH,IAAD,EAAOH,QAAP,CAnBM,CAAT;AAqBA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,4BAA8BG,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAE,MAAMC,OAAO,CAAED,IAAD,IAAUA,IAAI,GAAG,CAAlB,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAEoE,GAFpE,eAGE;AAAQ,MAAA,OAAO,EAAE,MAAMC,OAAO,CAAED,IAAD,IAAUA,IAAI,GAAG,CAAlB,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,EAIGF,KAAK,CAACW,GAAN,CAAWC,IAAD,iBACT;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAEb,QAAhB;AAAA,WAA8Ba;AAA9B;AAAA;AAAA;AAAA;AAAA;AADF,OAASA,IAAI,CAACP,EAAd;AAAA;AAAA;AAAA;AAAA,YADD,CAJH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CArCD;;GAAMP,Q;;KAAAA,Q;AAuCN,eAAeA,QAAf","sourcesContent":["// src/components/TodoList.js\nimport { useEffect, useState } from \"react\";\nimport { Todo } from \"./Todo\";\n\nconst PER_PAGE_LIMIT = 3;\n\nconst TodoList = ({ contract }) => {\n  const [todos, setTodos] = useState([]);\n  const [page, setPage] = useState(1);\n\n  useEffect(() => {\n    let offset;\n    if (page < 1) {\n      setPage(1);\n      offset = 0;\n    } else {\n      offset = (page - 1) * PER_PAGE_LIMIT;\n    }\n\n    // every second after the component first mounts\n    // update the list of todos by invoking the get\n    // method on the smart contract\n    const id = setInterval(() => {\n      contract\n        .get({ offset, limit: PER_PAGE_LIMIT })\n        .then((todos) => setTodos(todos));\n    }, 1000);\n\n    return () => clearInterval(id);\n  }, [page, contract]);\n\n  return (\n    <ul>\n      <div className=\"flex\">Sayfa: {page}</div>\n      <button onClick={() => setPage((page) => page - 1)}>&lt;</button>{\" \"}\n      <button onClick={() => setPage((page) => page + 1)}>&gt;</button>\n      {todos.map((todo) => (\n        <li key={todo.id}>\n          <Todo contract={contract} {...todo} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}