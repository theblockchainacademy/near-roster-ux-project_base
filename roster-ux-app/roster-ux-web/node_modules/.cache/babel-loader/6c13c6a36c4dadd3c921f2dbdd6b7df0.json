{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ErrorContext = exports.TypedError = exports.ArgumentTypeError = exports.PositionalArgsError = void 0;\n\nclass PositionalArgsError extends Error {\n  constructor() {\n    super('Contract method calls expect named arguments wrapped in object, e.g. { argName1: argValue1, argName2: argValue2 }');\n  }\n\n}\n\nexports.PositionalArgsError = PositionalArgsError;\n\nclass ArgumentTypeError extends Error {\n  constructor(argName, argType, argValue) {\n    super(`Expected ${argType} for '${argName}' argument, but got '${JSON.stringify(argValue)}'`);\n  }\n\n}\n\nexports.ArgumentTypeError = ArgumentTypeError;\n\nclass TypedError extends Error {\n  constructor(message, type, context) {\n    super(message);\n    this.type = type || 'UntypedError';\n    this.context = context;\n  }\n\n}\n\nexports.TypedError = TypedError;\n\nclass ErrorContext {\n  constructor(transactionHash) {\n    this.transactionHash = transactionHash;\n  }\n\n}\n\nexports.ErrorContext = ErrorContext;","map":{"version":3,"sources":["/home/jjsullivan/near-roster-ux-project_base/roster-ux-app/roster-ux-web/node_modules/near-api-js/lib/utils/errors.js"],"names":["Object","defineProperty","exports","value","ErrorContext","TypedError","ArgumentTypeError","PositionalArgsError","Error","constructor","argName","argType","argValue","JSON","stringify","message","type","context","transactionHash"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,YAAR,GAAuBF,OAAO,CAACG,UAAR,GAAqBH,OAAO,CAACI,iBAAR,GAA4BJ,OAAO,CAACK,mBAAR,GAA8B,KAAK,CAA3G;;AACA,MAAMA,mBAAN,SAAkCC,KAAlC,CAAwC;AACpCC,EAAAA,WAAW,GAAG;AACV,UAAM,mHAAN;AACH;;AAHmC;;AAKxCP,OAAO,CAACK,mBAAR,GAA8BA,mBAA9B;;AACA,MAAMD,iBAAN,SAAgCE,KAAhC,CAAsC;AAClCC,EAAAA,WAAW,CAACC,OAAD,EAAUC,OAAV,EAAmBC,QAAnB,EAA6B;AACpC,UAAO,YAAWD,OAAQ,SAAQD,OAAQ,wBAAuBG,IAAI,CAACC,SAAL,CAAeF,QAAf,CAAyB,GAA1F;AACH;;AAHiC;;AAKtCV,OAAO,CAACI,iBAAR,GAA4BA,iBAA5B;;AACA,MAAMD,UAAN,SAAyBG,KAAzB,CAA+B;AAC3BC,EAAAA,WAAW,CAACM,OAAD,EAAUC,IAAV,EAAgBC,OAAhB,EAAyB;AAChC,UAAMF,OAAN;AACA,SAAKC,IAAL,GAAYA,IAAI,IAAI,cAApB;AACA,SAAKC,OAAL,GAAeA,OAAf;AACH;;AAL0B;;AAO/Bf,OAAO,CAACG,UAAR,GAAqBA,UAArB;;AACA,MAAMD,YAAN,CAAmB;AACfK,EAAAA,WAAW,CAACS,eAAD,EAAkB;AACzB,SAAKA,eAAL,GAAuBA,eAAvB;AACH;;AAHc;;AAKnBhB,OAAO,CAACE,YAAR,GAAuBA,YAAvB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ErrorContext = exports.TypedError = exports.ArgumentTypeError = exports.PositionalArgsError = void 0;\nclass PositionalArgsError extends Error {\n    constructor() {\n        super('Contract method calls expect named arguments wrapped in object, e.g. { argName1: argValue1, argName2: argValue2 }');\n    }\n}\nexports.PositionalArgsError = PositionalArgsError;\nclass ArgumentTypeError extends Error {\n    constructor(argName, argType, argValue) {\n        super(`Expected ${argType} for '${argName}' argument, but got '${JSON.stringify(argValue)}'`);\n    }\n}\nexports.ArgumentTypeError = ArgumentTypeError;\nclass TypedError extends Error {\n    constructor(message, type, context) {\n        super(message);\n        this.type = type || 'UntypedError';\n        this.context = context;\n    }\n}\nexports.TypedError = TypedError;\nclass ErrorContext {\n    constructor(transactionHash) {\n        this.transactionHash = transactionHash;\n    }\n}\nexports.ErrorContext = ErrorContext;\n"]},"metadata":{},"sourceType":"script"}