{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Assignable = exports.Enum = void 0;\n/** @hidden @module */\n\nclass Enum {\n  constructor(properties) {\n    if (Object.keys(properties).length !== 1) {\n      throw new Error('Enum can only take single value');\n    }\n\n    Object.keys(properties).map(key => {\n      this[key] = properties[key];\n      this.enum = key;\n    });\n  }\n\n}\n\nexports.Enum = Enum;\n\nclass Assignable {\n  constructor(properties) {\n    Object.keys(properties).map(key => {\n      this[key] = properties[key];\n    });\n  }\n\n}\n\nexports.Assignable = Assignable;","map":{"version":3,"sources":["/home/jjsullivan/near-roster-ux-project_base/roster-ux-app/roster-ux-web/node_modules/near-api-js/lib/utils/enums.js"],"names":["Object","defineProperty","exports","value","Assignable","Enum","constructor","properties","keys","length","Error","map","key","enum"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,UAAR,GAAqBF,OAAO,CAACG,IAAR,GAAe,KAAK,CAAzC;AACA;;AACA,MAAMA,IAAN,CAAW;AACPC,EAAAA,WAAW,CAACC,UAAD,EAAa;AACpB,QAAIP,MAAM,CAACQ,IAAP,CAAYD,UAAZ,EAAwBE,MAAxB,KAAmC,CAAvC,EAA0C;AACtC,YAAM,IAAIC,KAAJ,CAAU,iCAAV,CAAN;AACH;;AACDV,IAAAA,MAAM,CAACQ,IAAP,CAAYD,UAAZ,EAAwBI,GAAxB,CAA6BC,GAAD,IAAS;AACjC,WAAKA,GAAL,IAAYL,UAAU,CAACK,GAAD,CAAtB;AACA,WAAKC,IAAL,GAAYD,GAAZ;AACH,KAHD;AAIH;;AATM;;AAWXV,OAAO,CAACG,IAAR,GAAeA,IAAf;;AACA,MAAMD,UAAN,CAAiB;AACbE,EAAAA,WAAW,CAACC,UAAD,EAAa;AACpBP,IAAAA,MAAM,CAACQ,IAAP,CAAYD,UAAZ,EAAwBI,GAAxB,CAA6BC,GAAD,IAAS;AACjC,WAAKA,GAAL,IAAYL,UAAU,CAACK,GAAD,CAAtB;AACH,KAFD;AAGH;;AALY;;AAOjBV,OAAO,CAACE,UAAR,GAAqBA,UAArB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Assignable = exports.Enum = void 0;\n/** @hidden @module */\nclass Enum {\n    constructor(properties) {\n        if (Object.keys(properties).length !== 1) {\n            throw new Error('Enum can only take single value');\n        }\n        Object.keys(properties).map((key) => {\n            this[key] = properties[key];\n            this.enum = key;\n        });\n    }\n}\nexports.Enum = Enum;\nclass Assignable {\n    constructor(properties) {\n        Object.keys(properties).map((key) => {\n            this[key] = properties[key];\n        });\n    }\n}\nexports.Assignable = Assignable;\n"]},"metadata":{},"sourceType":"script"}